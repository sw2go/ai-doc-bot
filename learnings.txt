1. CORS Debugging
-  Debug your backend on http://localhost:3000
-  Open Chrome and go any site, we take: https://www.google.com, 
-  Then Open Dev-Tools and open Console, any javascript API fetch to localhost will be with origin: https://www.google.com 
-  or try, enter a Query to the local API: fetch("http://localhost:3000/api/contexts") and see CORS error, 
   then adjust server config to allow this origin
-  The OPTIONS Method is automatically called by the Browser whenever the origin does not match the fetch-method's host-url. 

2. "Fehler" NEXT_PUBLIC.. Umgebungsvariablen werden im Docker-Container nicht aktualisiert
-> Ursache next.js übernimmt process.env.NEXT_PUBLIC.. Werte zur build-Zeit und fügt sie als Konstanten in den Code ein

3. LLM Logging
-  add ConsoleCallbackHandler to the callbacks in the OpenAIChat constructor

4. HTTP Interception of Client Resquests
-  see middleware.ts

5. HTTP Interception/Logging when backend (node) is acting as client
-  Depending on the used packages under the hood (see package-lock.json) one must use a different approach
   Either use: set NODE_DEBUG=http,https,net,stream then call npm run ... (this logs a lot but no pinecone?)
   Or register a handler on the underlying module (see httpLogging.ts)
   OpenAI uses axois, Pinecone node-fetch, in the end there was no one fits all solution, and logging pinecone failed at all
   To see all outgoing http traffic I ended up by using a external open source tool "HTTP toolkit"
   

6. Fehler mit "npm run dev" läuft alles

Wenn als Docker container gibt's Fehler mit langchain "400 Bad request"

ich hatte mal "axios" installiert, und dann wieder entfernt.

danach ging es nicht mehr und ich musste immer "axios" installieren obwohl es bei der vorlage nicht dabei war


fix im package-lock.json:

    "openai": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/openai/-/openai-3.2.1.tgz",
      "integrity": "sha512-762C9BNlJPbjjlWZi4WYK9iM2tAVAv0uUp1UmI34vb0CN5T2mjB/qM6RYBmNKMh/dN9fC+bxqPwWJZUTWW052A==",
      "requires": {
        "axios": "^0.26.0",
        "form-data": "^4.0.0"


    "axios": {
      "version": "0.26.1",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.26.1.tgz",
      "integrity": "sha512-fPwcX4EvnSHuInCMItEhAGnaSEXRBjtzh9fOtsE6E1G6p7vl7edEeZe11QHf18+6+9gR5PbKV/sGKNaD8YaMeA==",
      "requires": {
        "follow-redirects": "^1.14.8"
      }
    },



vorher was nicht ging:

    "openai": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/openai/-/openai-3.2.1.tgz",
      "integrity": "sha512-762C9BNlJPbjjlWZi4WYK9iM2tAVAv0uUp1UmI34vb0CN5T2mjB/qM6RYBmNKMh/dN9fC+bxqPwWJZUTWW052A==",
      "requires": {
        "axios": "^0.26.0",
        "form-data": "^4.0.0"
      },
      "dependencies": {
        "axios": {
          "version": "0.26.1",
          "resolved": "https://registry.npmjs.org/axios/-/axios-0.26.1.tgz",
          "integrity": "sha512-fPwcX4EvnSHuInCMItEhAGnaSEXRBjtzh9fOtsE6E1G6p7vl7edEeZe11QHf18+6+9gR5PbKV/sGKNaD8YaMeA==",
          "requires": {
            "follow-redirects": "^1.14.8"
          }
        }
      }
    },
